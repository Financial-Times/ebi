version: 2.1

executors:
    circleci-node-10:
        docker:
            - image: circleci/node:14-browsers
        working_directory: ~/project/build-node-10

    circleci-node-8:
        docker:
            - image: circleci/node:8
        working_directory: ~/project/build-node-8

commands:
    npm-install:
        description: 'npm install without generating a package-lock file'
        steps:
            - run:
                  name: 'Install project dependencies'
                  command: npm install --no-package-lock

references:
    #
    # Workspace
    #

    workspace_root: &workspace_root ~/project

    attach_workspace: &attach_workspace
        attach_workspace:
            at: *workspace_root

    #
    # Filters
    #

    filters_branch_build: &filters_branch_build
        tags:
            ignore: /.*/

    filters_release_package_build: &filters_release_package_build
        tags:
            only:
                - /^v\d+\.\d+\.\d+(\-\w+\.\d+)?$/

        branches:
            ignore: /.*/

jobs:
    build-node-8:
        executor: circleci-node-8
        steps:
            - checkout
            - npm-install
            - persist_to_workspace:
                  root: *workspace_root
                  paths:
                      - build-node-8
    build-node-10:
        executor: circleci-node-10
        steps:
            - checkout
            - npm-install
            - persist_to_workspace:
                  root: *workspace_root
                  paths:
                      - build-node-10

    test-node-8:
        executor: circleci-node-8
        steps:
            - *attach_workspace
            - run:
                  name: Run tests
                  command: npm test
    test-node-10:
        executor: circleci-node-10
        steps:
            - *attach_workspace
            - run:
                  name: Run tests
                  command: npm test

    publish:
        executor: circleci-node-10
        steps:
            - *attach_workspace
            - run:
                  name: Configure registry.npmjs.org auth token
                  command: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > ${HOME}/.npmrc
            - run:
                  name: Extract package name and semver from git tag
                  command: |
                      # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
                      export RELEASE_SEMVER='v[0-9]{1,3}\.[0-9]{1,2}\.[0-9]{1,2}(-[a-z]+\.[0-9])?';
                      export TARGET_VERSION=$(echo $CIRCLE_TAG | grep -o -E $RELEASE_SEMVER);
                      echo "export TARGET_VERSION=$TARGET_VERSION" >> $BASH_ENV;
                      echo "Creating release ${TARGET_VERSION}";
            - run:
                  name: Bump package version
                  command: npm version --no-git-tag-version ${TARGET_VERSION}

            - run:
                  name: Publish package to npm
                  command: npm publish --access public

workflows:
    version: 2

    build-test:
        jobs:
            - build-node-8:
                  filters:
                      <<: *filters_branch_build
            - build-node-10:
                  filters:
                      <<: *filters_branch_build
            - test-node-8:
                  filters:
                      <<: *filters_branch_build
                  requires:
                      - build-node-8
            - test-node-10:
                  filters:
                      <<: *filters_branch_build
                  requires:
                      - build-node-10

    build-test-publish:
        jobs:
            - build-node-8:
                  filters:
                      <<: *filters_release_package_build
            - build-node-10:
                  filters:
                      <<: *filters_release_package_build
            - test-node-8:
                  filters:
                      <<: *filters_release_package_build
                  requires:
                      - build-node-8
            - test-node-10:
                  filters:
                      <<: *filters_release_package_build
                  requires:
                      - build-node-10
            - publish:
                  filters:
                      <<: *filters_release_package_build
                  requires:
                      - test-node-8
                      - test-node-10
